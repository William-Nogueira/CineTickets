package senior.com.br.CineTickets.validation;

import org.junit.jupiter.api.Test;
import senior.com.br.CineTickets.domain.session.DTO.PostSessionDTO;
import senior.com.br.CineTickets.domain.session.validation.SessionException;
import senior.com.br.CineTickets.domain.session.validation.ValidatorCinemaIsOpen;

import java.time.LocalDateTime;

import static org.junit.jupiter.api.Assertions.assertThrows;

import org.junit.jupiter.api.function.Executable;

import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;

public class ValidatorCinemaIsOpenTest {

    @Test
    public void whenCinemaIsOpen_thenNoExceptionIsThrown() {
        ValidatorCinemaIsOpen validator = new ValidatorCinemaIsOpen();
        PostSessionDTO dto = new PostSessionDTO(1L, 1L, LocalDateTime.of(2023, 1, 1, 12, 0), 120);

        assertDoesNotThrow(() -> validator.validate(dto));
    }

    @Test
    public void whenCinemaIsClosed_thenExceptionIsThrown() {
        ValidatorCinemaIsOpen validator = new ValidatorCinemaIsOpen();
        PostSessionDTO dto = new PostSessionDTO(1L, 1L, LocalDateTime.of(2023, 1, 1, 9, 59), 120);

        Executable executable = () -> validator.validate(dto);
        assertThrows(SessionException.class, executable);
    }

    @Test
    public void whenHouris22_thenExceptionIsThrown() {
        ValidatorCinemaIsOpen validator = new ValidatorCinemaIsOpen();
        PostSessionDTO dto = new PostSessionDTO(1L, 1L, LocalDateTime.of(2023, 1, 1, 22, 1), 120);

        Executable executable = () -> validator.validate(dto);
        assertThrows(SessionException.class, executable);
    }
}